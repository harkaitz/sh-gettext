.\" Automatically generated by Pandoc 2.1.1
.\"
.TH "gettext-h-i18n" "1" "" "" ""
.hy
.SH NAME
.PP
gettext\-h\-i18n \- An interface to \[lq]xgettext\[rq] for program
internationalization
.SH SYNOPSIS
.nf
\f[C]
vi\ GetText
gettext\-h\-i18n\ \-ub
\f[]
.fi
.SH DESCRIPTION
.PP
This program helps internationalizing (i18n) a software project using
the \[lq]xgettext\[rq] utilities.
.SH STEP1 \- Write the configuration file
.PP
The first step is to create a \f[C]\&.gettext\f[], \f[C]GetText\f[] or
\f[C]gettext\f[] file and to set the following variables there.
.IP
.nf
\f[C]
GETTEXT_H_FIND_CMD=\[aq]find\ .\ \-iname\ "*.c"\[aq]
#\ The\ command\ to\ use\ for\ listing\ internationalizable\ text\ files.

GETTEXT_H_LANGS=\[aq]en\ es\ ...\[aq]
#\ The\ languages\ for\ which\ you\ want\ to\ create\ localized\ texts.

GETTEXT_H_DOMAIN=\[aq]package\-name\[aq]
#\ A\ package\ name\ to\ identify\ your\ program.\ It\ can\ be\ anything.
\f[]
.fi
.PP
You can check the variables are set correctly executing:
.IP
.nf
\f[C]
$\ gettext\-h\-i18n\ \-l\ :\ List\ sources\ using\ GETTEXT_H_FIND_CMD
$\ gettext\-h\-i18n\ \-V\ :\ Show\ configuration\ variables.
\f[]
.fi
.SH STEP2 \- Add boilerplace file.
.PP
Some programming languages require some boilerplate in your project to
be internationalizable.
You can execute a generator to create add this code to the project.
.PP
Generators are named as \[lq]geni18n_LANG\[rq].
For example in a go project:
.IP
.nf
\f[C]
$\ gen18n_go\ #\ Will\ create\ "i18n.go".
\f[]
.fi
.SH STEP3 \- Check programming language support.
.PP
Each programming language uses a different message extraction mechanism.
.PP
The extractors are scripts named as \[lq]extract\-messages_LANG\[rq].
Example:
.IP
.nf
\f[C]
$\ gettext\-h\-i18n\ \-L
html\ \ \ extract\-messages_html
go\ \ \ \ \ extract\-messages_go

$\ extract\-messages_go\ hello.go
Hello\ World
\f[]
.fi
.SH STEP4 \- Update the po files and mo files.
.PP
Each time you edit the code, execute \[lq]gettext\-h\-i18n \-u\[rq] to
update the message database.
.IP
.nf
\f[C]
$\ gettext\-h\-i18n\ \-u
locale/es/hello.po:\ 1\ translations\ missing.
locale/en/hello.po:\ 1\ translations\ missing.
\f[]
.fi
.PP
Edit the po files.
Then update the final mo files.
.IP
.nf
\f[C]
$\ gettext\-h\-i18n\ \-b
\f[]
.fi
.SH STEP4 \- Localization (l10n)
.PP
Once all messages are internationalized (i18n) your program needs to
peek the correct messages depending of the user preferences.
This libraries are supported:
.IP
.nf
\f[C]
go:\ github.com/harkaitz/go\-gettext\-l10n
\f[]
.fi
.SH COLLABORATING
.PP
For making bug reports, feature requests and donations visit one of the
following links:
.IP "1." 3
<gemini://harkadev.com/oss/>
.IP "2." 3
<https://harkadev.com/oss/> # SEE ALSO
.PP
\f[B]XGETTEXT(1)\f[]
